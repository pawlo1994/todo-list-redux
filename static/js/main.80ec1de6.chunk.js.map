{"version":3,"sources":["features/tasks/TasksPage/Form/styled.js","features/tasks/Input/index.js","features/tasks/tasksLocalStorage.js","features/tasks/tasksSlice.js","features/tasks/TasksPage/Form/index.js","features/tasks/TasksPage/TaskList/styled.js","features/tasks/TasksPage/TaskList/index.js","features/tasks/TasksPage/Buttons/styled.js","features/tasks/TasksPage/Buttons/index.js","common/Section/styled.js","common/theme.js","common/Section/index.js","common/Header/styled.js","common/Header/index.js","common/Container/styled.js","common/Container/index.js","features/tasks/TasksPage/Search/styled.js","features/tasks/TasksPage/searchQueryParamName.js","features/tasks/TasksPage/Search/index.js","features/tasks/TasksPage/index.js","common/StyledParagraph.js","features/author/AuthorPage.js","features/tasks/TaskPage/index.js","styled.js","App.js","features/tasks/getExampleTasks.js","features/tasks/tasksSaga.js","rootSaga.js","store.js","reportWebVitals.js","index.js"],"names":["StyledForm","styled","form","theme","breakpoint","StyledButton","button","buttonMainColor","StyledInput","input","localStorageKey","saveTasksInLocalStorage","tasks","localStorage","setItem","JSON","stringify","tasksSlice","createSlice","name","initialState","parse","getItem","hideDone","reducers","addTask","taskContent","payload","push","toggleHideDone","state","toggleTaskDone","taskID","index","findIndex","task","id","done","removeTask","splice","setAllDone","fetchExampleTasks","setTasks","actions","selectTasksState","selectTasks","selectHideDone","Form","inputRef","useRef","useState","newTaskContent","setNewTaskContent","dispatch","useDispatch","onSubmit","event","preventDefault","trim","content","nanoid","current","focus","ref","placeholder","value","onChange","target","required","StyledTasks","ul","StyledItem","li","hidden","css","StyledSpan","span","remove","TaskList","location","useLocation","query","URLSearchParams","search","get","useSelector","filter","toUpperCase","includes","selectTasksByQuery","map","onClick","to","StyledButtons","div","StyledButtonsButton","Buttons","length","disabled","every","StyledSection","section","StyledSectionHeader","header","Section","title","body","extraHeaderContent","StyledHeader","Header","StyledContainer","main","Container","children","Wrapper","Search","history","useHistory","searchQueryParamName","searchParams","delete","set","pathname","toString","TasksPage","StyledParagraph","p","AuthorPage","TaskPage","useParams","find","getTaskById","activeClassName","StyledNavLink","NavLink","attrs","StyledNavigation","nav","App","path","getExampleTasks","a","fetch","response","ok","Error","statusText","json","fetchExampleTasksHandler","saveTasksInLocalStorageHandler","tasksSaga","delay","call","exampleTasks","put","alert","select","takeLatest","type","takeEvery","rootSaga","all","sagaMiddleware","createSagaMiddleware","store","configureStore","reducer","tasksReducer","middleware","run","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.80ec1de6.chunk.js","sourcesContent":["import styled from \"styled-components\";\r\n\r\nexport const StyledForm = styled.form`\r\n    margin: 0 auto;\r\n    padding: 20px;\r\n    display: flex;\r\n\r\n    @media(max-width: ${({ theme }) => theme.breakpoint}px){\r\n        flex-direction: column;\r\n    }\r\n`;\r\n\r\nexport const StyledButton = styled.button`\r\n    flex-shrink: 0;\r\n    padding: 10px;\r\n    background-color: ${({ theme }) => theme.buttonMainColor};\r\n    color: #fff;\r\n    border: none;\r\n    transition: background-color 0.3s, transform 0.3s;\r\n\r\n    &:hover{\r\n        cursor: pointer;\r\n        background-color: hsl(180, 100%, 30%);\r\n        transform: scale(1.1);\r\n    }\r\n\r\n    &:active{\r\n        outline: 2px solid #000;\r\n    }\r\n`;","import styled from \"styled-components\";\r\n\r\nexport const StyledInput = styled.input`\r\n    flex-grow: 1;\r\n    margin-right: 20px;\r\n    padding: 10px;\r\n    border: 1px solid #ccc;\r\n\r\n    @media(max-width: ${({ theme }) => theme.breakpoint}px){\r\n        margin: 0 0 10px;\r\n    }\r\n`;","const localStorageKey = \"tasks\";\r\n\r\nexport const saveTasksInLocalStorage = tasks =>\r\n    localStorage.setItem(localStorageKey, JSON.stringify(tasks));\r\n\r\nexport const getTasksFromLocalStorage = () =>\r\n    JSON.parse(localStorage.getItem(localStorageKey)) || [];","import { createSlice } from \"@reduxjs/toolkit\";\r\nimport { getTasksFromLocalStorage } from \"../tasks/tasksLocalStorage\";\r\n\r\nconst tasksSlice = createSlice({\r\n    name: 'tasks',\r\n    initialState: {\r\n        tasks: getTasksFromLocalStorage(),\r\n        hideDone: false,\r\n    },\r\n    reducers: {\r\n        addTask: ({ tasks }, { payload: taskContent }) => {\r\n            tasks.push(taskContent);\r\n        },\r\n        toggleHideDone: state => {\r\n            state.hideDone = !state.hideDone;\r\n        },\r\n        toggleTaskDone: ({ tasks }, { payload: taskID }) => {\r\n            const index = tasks.findIndex(task => task.id === taskID);\r\n            tasks[index].done = !tasks[index].done;\r\n        },\r\n        removeTask: ({ tasks }, { payload: taskID }) => {\r\n            const index = tasks.findIndex(task => task.id === taskID);\r\n            tasks.splice(index, 1);\r\n        },\r\n        setAllDone: ({ tasks }) => {\r\n            for (const task of tasks) {\r\n                task.done = true;\r\n            }\r\n        },\r\n        fetchExampleTasks: () => { },\r\n        setTasks: (state, { payload: tasks }) => {\r\n            state.tasks = tasks;\r\n        }\r\n    }\r\n});\r\n\r\nexport const {\r\n    addTask,\r\n    toggleHideDone,\r\n    toggleTaskDone,\r\n    removeTask,\r\n    setAllDone,\r\n    fetchExampleTasks,\r\n    setTasks,\r\n} = tasksSlice.actions;\r\nexport const selectTasksState = state => state.tasks;\r\nexport const selectTasks = state => selectTasksState(state).tasks;\r\nexport const selectHideDone = state => selectTasksState(state).hideDone;\r\n\r\nexport const getTaskById = (state, taskID) => selectTasks(state).find(({ id }) => id === taskID);\r\n\r\nexport const selectTasksByQuery = (state, query) => {\r\n    const tasks = selectTasks(state);\r\n    if (!query || query.trim === \"\") {\r\n        return tasks;\r\n    }\r\n\r\n    return selectTasks(state).filter(({ content }) =>\r\n        content.toUpperCase().includes(query.trim().toUpperCase()));\r\n}\r\nexport default tasksSlice.reducer;","import { useState, useRef } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { nanoid } from \"@reduxjs/toolkit\";\r\nimport { StyledForm, StyledButton } from \"./styled\";\r\nimport { StyledInput } from \"../../Input\";\r\nimport { addTask } from \"../../tasksSlice\";\r\n\r\nconst Form = () => {\r\n    const inputRef = useRef(null);\r\n    const [newTaskContent, setNewTaskContent] = useState(\"\");\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const onFormSubmit = (event) => {\r\n        event.preventDefault();\r\n        if (!newTaskContent.trim()) {\r\n            setNewTaskContent(\"\");\r\n            return;\r\n        }\r\n\r\n        dispatch(addTask({\r\n            content: newTaskContent.trim(),\r\n            done: false,\r\n            id: nanoid(),\r\n        }));\r\n\r\n        setNewTaskContent(\"\");\r\n        inputRef.current.focus();\r\n    }\r\n\r\n    return (\r\n        <StyledForm\r\n            onSubmit={onFormSubmit}\r\n        >\r\n            <StyledInput\r\n                ref={inputRef}\r\n                placeholder=\"Co jest do zrobienia?\"\r\n                value={newTaskContent}\r\n                onChange={({ target }) => setNewTaskContent(target.value)}\r\n                required\r\n            />\r\n            <StyledButton>Dodaj zadanie</StyledButton>\r\n        </StyledForm>\r\n    )\r\n};\r\n\r\nexport default Form;","import styled, { css } from \"styled-components\";\r\n\r\nexport const StyledTasks = styled.ul`\r\n    list-style-type: none;\r\n    margin: 0 auto;\r\n    padding: 40px 10px 20px;\r\n`;\r\n\r\nexport const StyledItem = styled.li`\r\n    padding: 10px 20px;\r\n    display: grid;\r\n    grid-gap: 10px;\r\n    grid-template-columns: auto 1fr auto;\r\n    align-items: center;\r\n    border-bottom: 2px solid #ddd;\r\n\r\n    ${({ hidden }) => hidden && css`\r\n        display: none;\r\n    `}\r\n`;\r\n\r\nexport const StyledSpan = styled.span`\r\n    color: #333;\r\n    word-break: break-word;\r\n    padding: 0 5px;\r\n\r\n    ${({ done }) => done && css`\r\n        text-decoration: line-through;\r\n    `}\r\n`;\r\n\r\nexport const StyledButton = styled.button`\r\n    display: flex;\r\n    padding: 5px;\r\n    width: 30px;\r\n    height: 30px;\r\n    justify-content: center;\r\n    align-items: center;\r\n    border: none;\r\n    transition: background-color 0.3s;\r\n\r\n    ${({ done }) => done && css`\r\n        background-color: #090;\r\n        color: #fff;\r\n\r\n        &:hover{\r\n            background-color: #0a0;\r\n        }\r\n    `}\r\n\r\n    ${({ remove }) => remove && css`\r\n        background-color: #f00;\r\n        color: #fff;\r\n\r\n        &:hover{\r\n            background-color: #f60;\r\n        }\r\n    `}\r\n\r\n    &:hover{\r\n        cursor: pointer;\r\n    }\r\n\r\n    &:active{\r\n        outline: 2px solid #000;\r\n    }\r\n`;","import { useSelector, useDispatch } from \"react-redux\";\r\nimport { toggleTaskDone, removeTask, selectHideDone, selectTasksByQuery } from \"../../tasksSlice\";\r\nimport { StyledTasks, StyledItem, StyledSpan, StyledButton } from \"./styled\";\r\nimport { Link, useLocation } from \"react-router-dom\";\r\n\r\nconst TaskList = () => {\r\n    const location = useLocation();\r\n    const query = new URLSearchParams(location.search).get(\"szukaj\");\r\n\r\n    const tasks = useSelector(state => selectTasksByQuery(state, query));\r\n    const hideDone = useSelector(selectHideDone);\r\n    const dispatch = useDispatch();\r\n\r\n    return (\r\n        <StyledTasks>\r\n            {tasks.map(task => (\r\n                <StyledItem hidden={hideDone && task.done}\r\n                    key={task.id}\r\n                >\r\n                    <StyledButton done\r\n                        onClick={() => dispatch(toggleTaskDone(task.id))}\r\n                    >\r\n                        {task.done ? \"✔\" : \"\"}\r\n                    </StyledButton>\r\n                    <StyledSpan done={task.done}>\r\n                        <Link to={`/zadania/${task.id}`}>{task.content}</Link>\r\n                    </StyledSpan>\r\n                    <StyledButton remove\r\n                        onClick={() => dispatch(removeTask(task.id))}\r\n                    >\r\n                        🗑\r\n                    </StyledButton>\r\n                </StyledItem>\r\n            ))}\r\n        </StyledTasks>\r\n    )\r\n};\r\n\r\nexport default TaskList;","import styled, { css } from \"styled-components\";\r\n\r\nexport const StyledButtons = styled.div`\r\n    display: flex;\r\n    list-style-type: none;\r\n    padding: 0; \r\n\r\n    @media(max-width:${({ theme }) => theme.breakpoint}px){\r\n        flex-direction: column;\r\n        align-items: center;\r\n    }\r\n`;\r\n\r\nexport const StyledButtonsButton = styled.button`\r\n    padding-left: 20px;\r\n    background-color: transparent;\r\n    border: none;\r\n    color: ${({ theme }) => theme.buttonMainColor};\r\n    transition: color 0.3s;\r\n\r\n    @media(max-width:${({ theme }) => theme.breakpoint}px){\r\n        padding-left: 0;\r\n        padding-bottom: 15px;\r\n    }\r\n\r\n    ${({ hidden }) => hidden && css`\r\n        display: none;\r\n    `}\r\n\r\n    &:hover{\r\n        color: hsl(180, 100%, 35%);\r\n        cursor: pointer;\r\n    }\r\n\r\n    &:active{\r\n        color: hsl(180, 100%, 20%);\r\n    }\r\n\r\n    &:disabled{\r\n        color: #999;\r\n        cursor: default;\r\n    }\r\n`;","import { useSelector, useDispatch } from \"react-redux\";\r\nimport { StyledButtons, StyledButtonsButton } from \"./styled\";\r\nimport { selectTasks, selectHideDone, toggleHideDone, setAllDone } from \"../../tasksSlice\";\r\n\r\nconst Buttons = () => {\r\n    const tasks = useSelector(selectTasks);\r\n    const hideDone = useSelector(selectHideDone);\r\n    const dispatch = useDispatch();\r\n    return (\r\n        <>\r\n            {tasks.length > 0 && (\r\n                <StyledButtons>\r\n                    <StyledButtonsButton\r\n                        onClick={() => dispatch(toggleHideDone())}\r\n                    >\r\n                        {hideDone ? \"Pokaż\" : \"Ukryj\"} ukończone\r\n                    </StyledButtonsButton>\r\n                    <StyledButtonsButton\r\n                        disabled={tasks.every(({ done }) => done)}\r\n                        onClick={() => dispatch(setAllDone())}\r\n                    >\r\n                        Ukończ wszystkie\r\n                    </StyledButtonsButton>\r\n                </StyledButtons>)}\r\n        </>)\r\n};\r\n\r\nexport default Buttons;","import styled from \"styled-components\";\r\n\r\nexport const StyledSection = styled.section`\r\n    background-color: #fff;\r\n    margin: 30px;\r\n    padding: 0;\r\n    box-shadow: 0px 0px 2px 2px #ddd;\r\n`;\r\n\r\nexport const StyledSectionHeader = styled.header`\r\n    display: flex;\r\n    justify-content: space-between;\r\n    border-bottom: 2px solid #ddd;\r\n    padding: 0 20px;\r\n\r\n    @media(max-width: ${({ theme }) => theme.breakpoint}px){\r\n        flex-direction: column;\r\n    }\r\n`;","export const theme = {\r\n    breakpoint: 767,\r\n    buttonMainColor: \"teal\",\r\n};","import { StyledSection, StyledSectionHeader } from \"./styled\";\r\nimport { ThemeProvider } from \"styled-components\";\r\nimport { theme } from \"../theme\";\r\n\r\nconst Section = ({ title, body, extraHeaderContent }) => (\r\n    <ThemeProvider theme={theme}>\r\n        <StyledSection>\r\n            <StyledSectionHeader>\r\n                <h2>{title}</h2>\r\n                {extraHeaderContent}\r\n            </StyledSectionHeader>\r\n            {body}\r\n        </StyledSection>\r\n    </ThemeProvider>\r\n);\r\n\r\nexport default Section;","import styled from \"styled-components\";\r\n\r\nexport const StyledHeader = styled.header`\r\n    margin: 40px 30px 0;\r\n`;","import { StyledHeader } from \"./styled\";\r\n\r\nconst Header = ({ title }) => (\r\n    <StyledHeader>\r\n        <h1>{title}</h1>\r\n    </StyledHeader>\r\n);\r\n\r\nexport default Header;","import styled from \"styled-components\";\r\n\r\nexport const StyledContainer = styled.main`\r\n    margin: 0 auto;\r\n    width: 100%;\r\n    max-width: 1024px;\r\n`;","import { StyledContainer } from \"./styled\";\r\n\r\nconst Container = ({ children }) => (\r\n    <StyledContainer>\r\n        {children}\r\n    </StyledContainer>\r\n);\r\n\r\nexport default Container;","import styled from \"styled-components\";\r\n\r\nexport const Wrapper = styled.div`\r\n    padding: 20px;\r\n    padding-right: 0;\r\n    display: grid;\r\n    grid-template-columns: 1fr;\r\n\r\n    @media(max-width: ${({ theme }) => theme.breakpoint}px)\r\n    {\r\n        padding-right: 20px;\r\n    }\r\n`;","export default \"szukaj\";","import { useHistory, useLocation } from \"react-router-dom\";\r\nimport { StyledInput } from \"../../../tasks/Input/index\";\r\nimport { Wrapper } from \"./styled\";\r\nimport searchQueryParamName from \"../searchQueryParamName\";\r\n\r\nexport const Search = () => {\r\n    const location = useLocation();\r\n    const history = useHistory();\r\n    const query = (new URLSearchParams(location.search)).get(searchQueryParamName);\r\n\r\n    const onInputChange = ({ target }) => {\r\n        const searchParams = new URLSearchParams(location.search);\r\n\r\n        if (target.value.trim() === \"\") {\r\n            searchParams.delete(searchQueryParamName);\r\n        }\r\n        else {\r\n            searchParams.set(searchQueryParamName, target.value);\r\n        }\r\n\r\n        history.push(`${location.pathname}?${searchParams.toString()}`)\r\n    };\r\n\r\n    return (\r\n        <Wrapper>\r\n            <StyledInput\r\n                placeholder=\"Filtruj zadania\"\r\n                value={query || \"\"}\r\n                onChange={onInputChange}\r\n            />\r\n        </Wrapper>\r\n    )\r\n};","import Form from './Form';\nimport TaskList from './TaskList';\nimport Buttons from './Buttons';\nimport Section from '../../../common/Section';\nimport Header from \"../../../common/Header\";\nimport Container from \"../../../common/Container\";\nimport { Search } from './Search';\nimport { theme } from '../../../common/theme.js';\nimport { ThemeProvider } from 'styled-components';\nimport { StyledButtonsButton } from './Buttons/styled';\nimport { useDispatch } from 'react-redux';\nimport { fetchExampleTasks } from '../tasksSlice';\n\nfunction TasksPage() {\n\n  const dispatch = useDispatch();\n  return (\n    <ThemeProvider theme={theme}>\n      <Container>\n        <Header title=\"Lista Zadań\" />\n        <Section\n          title=\"Dodaj nowe zadanie\"\n          body={<Form />}\n          extraHeaderContent={\n            <StyledButtonsButton\n              onClick={() => dispatch(fetchExampleTasks())}\n            >\n              Pobierz przykładowe zadania\n            </StyledButtonsButton>}\n        />\n        <Section\n          title=\"Wyszukiwarka\"\n          body={<Search />}\n        />\n        <Section title=\"Lista zadań\"\n          body={<TaskList />}\n          extraHeaderContent={<Buttons />}\n        />\n      </Container>\n    </ThemeProvider>\n  );\n}\n\nexport default TasksPage;\n","import styled from \"styled-components\";\r\n\r\nexport const StyledParagraph = styled.p`\r\n    padding: 0 20px 10px;\r\n`;","import Section from '../../common/Section';\r\nimport Header from \"../../common/Header\";\r\nimport Container from \"../../common/Container\";\r\nimport { theme } from '../../common/theme.js';\r\nimport { ThemeProvider } from 'styled-components';\r\nimport { StyledParagraph } from \"../../common/StyledParagraph\";\r\n\r\nfunction AuthorPage() {\r\n\r\n    return (\r\n        <ThemeProvider theme={theme}>\r\n            <Container>\r\n                <Header title=\"O autorze\" />\r\n                <Section\r\n                    title=\"Paweł Suchy\"\r\n                    body={\r\n                        <>\r\n                            <StyledParagraph>Nazywam się <strong>Paweł Suchy</strong>, mam 26 lat, mieszkam w\r\n                                Międzyrzeczu\r\n                                Dolnym koło Bielska-Białej.</StyledParagraph>\r\n                            <StyledParagraph>Ukończyłem technikum informatyczne w Zespole Szkół \"Silesia\" w\r\n                                Czechowicach-Dziedzicach jednak póki co nie pracuję w zawodzie.</StyledParagraph>\r\n                            <StyledParagraph>Aktualnie pracuję na produkcji w branży Automotive jednak bardzo mocno\r\n                                wierzę w to,\r\n                                że po ukończeniu tego kursu uda mi się, jeśli nie zmienić pracę na stałe, to chociaż zacząć dorabiać\r\n                                na frontendzie.</StyledParagraph>\r\n                            <StyledParagraph>Poza pracą od prawie 13 lat gram na puzonie a od prawie 12 w Młodzieżowej\r\n                                Orkiestrze Dętej Miejskiego Domu Kultury w Czechowicach-Dziedzicach. Poza tą orkiestrą miałem\r\n                                również okazję wziąć udział w czterech edycjach Żywieckiego Suwakowania a także zagrać dwa koncerty\r\n                                razem z zespołem Golec uOrkiestra.</StyledParagraph>\r\n                        </>\r\n                    }\r\n                />\r\n            </Container>\r\n        </ThemeProvider>\r\n    );\r\n}\r\n\r\nexport default AuthorPage;\r\n","import Section from '../../../common/Section';\r\nimport Header from \"../../../common/Header\";\r\nimport Container from \"../../../common/Container\";\r\nimport { theme } from '../../../common/theme.js';\r\nimport { ThemeProvider } from 'styled-components';\r\nimport { useParams } from 'react-router-dom';\r\nimport { useSelector } from 'react-redux';\r\nimport { getTaskById } from '../tasksSlice';\r\nimport { StyledParagraph } from '../../../common/StyledParagraph';\r\n\r\nfunction TaskPage() {\r\n\r\n    const { id } = useParams();\r\n    const task = useSelector(state => getTaskById(state, id));\r\n\r\n    return (\r\n        <ThemeProvider theme={theme}>\r\n            <Container>\r\n                <Header title=\"Szczegóły zadania\" />\r\n                <Section\r\n                    title={task ? task.content : \"Nie znaleziono zadania\"}\r\n                    body={\r\n                        task ?\r\n                            <StyledParagraph>\r\n                                <strong>Ukończono:</strong> {task.done ? \"Tak 😁\" : \"Nie 😪\"}\r\n                            </StyledParagraph> :\r\n                            <StyledParagraph>\r\n                                🤔\r\n                            </StyledParagraph>\r\n                    }\r\n                />\r\n            </Container>\r\n        </ThemeProvider>\r\n    );\r\n}\r\n\r\nexport default TaskPage;\r\n","import { NavLink } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\nconst activeClassName = \"active\";\r\n\r\nexport const StyledNavLink = styled(NavLink).attrs(() => ({\r\n    activeClassName,\r\n}))`\r\n    color: white;\r\n    text-decoration: none;\r\n    padding: 0 20px;\r\n&.${activeClassName}{\r\n    font-weight: bold;\r\n}\r\n`;\r\n\r\nexport const StyledNavigation = styled.nav`\r\n    display: flex;\r\n    list-style: none;\r\n    background-color: teal;\r\n    padding: 20px;\r\n    align-items: center;\r\n    justify-content: center;\r\n`;","import TasksPage from \"./features/tasks/TasksPage/index\";\r\nimport AuthorPage from \"./features/author/AuthorPage\";\r\nimport TaskPage from \"./features/tasks/TaskPage/index\";\r\nimport { StyledNavLink, StyledNavigation } from \"./styled\";\r\nimport { Switch, Route, HashRouter, Redirect } from 'react-router-dom';\r\n\r\nexport const App = () => (\r\n    <HashRouter>\r\n        <nav>\r\n            <StyledNavigation>\r\n                <li>\r\n                    <StyledNavLink to=\"/zadania\">Zadania</StyledNavLink>\r\n                </li>\r\n                <li>\r\n                    <StyledNavLink to=\"/autor\">O autorze</StyledNavLink>\r\n                </li>\r\n            </StyledNavigation>\r\n        </nav>\r\n        <Switch>\r\n            <Route path=\"/zadania/:id\">\r\n                <TaskPage />\r\n            </Route>\r\n            <Route path=\"/zadania\">\r\n                <TasksPage />\r\n            </Route>\r\n            <Route path=\"/autor\">\r\n                <AuthorPage />\r\n            </Route>\r\n            <Route path=\"/\">\r\n                <Redirect to=\"/zadania\" />\r\n            </Route>\r\n        </Switch>\r\n    </HashRouter>\r\n);","export const getExampleTasks = async () => {\r\n    const response = await fetch(\"/todo-list-redux/exampleTasks.json\");\r\n\r\n    if (!response.ok) {\r\n        new Error(response.statusText);\r\n    }\r\n\r\n    return await response.json();\r\n};","import { call, put, delay, takeLatest, takeEvery, select } from \"redux-saga/effects\";\r\nimport { getExampleTasks } from \"./getExampleTasks\";\r\nimport { fetchExampleTasks, selectTasks, setTasks } from \"./tasksSlice\";\r\nimport { saveTasksInLocalStorage } from \"../tasks/tasksLocalStorage\";\r\n\r\nfunction* fetchExampleTasksHandler() {\r\n    try {\r\n        yield delay(1000);\r\n        const exampleTasks = yield call(getExampleTasks);\r\n        yield put(setTasks(exampleTasks));\r\n    } catch (error) {\r\n        yield call(alert, \"Coś poszło nie tak!\");\r\n    }\r\n}\r\n\r\nfunction* saveTasksInLocalStorageHandler() {\r\n    const tasks = yield select(selectTasks);\r\n    yield call(saveTasksInLocalStorage, tasks);\r\n}\r\n\r\nexport function* tasksSaga() {\r\n    yield takeLatest(fetchExampleTasks.type, fetchExampleTasksHandler);\r\n    yield takeEvery(\"*\", saveTasksInLocalStorageHandler);\r\n};","import { all } from \"redux-saga/effects\";\r\nimport { tasksSaga } from \"./features/tasks/tasksSaga\";\r\n\r\nexport default function* rootSaga() {\r\n    yield all([\r\n        tasksSaga(),\r\n    ]);\r\n}","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport createSagaMiddleware from \"redux-saga\";\r\nimport tasksReducer from \"./features/tasks/tasksSlice\";\r\nimport rootSaga from \"./rootSaga\";\r\n\r\nconst sagaMiddleware = createSagaMiddleware();\r\n\r\nconst store = configureStore({\r\n    reducer: {\r\n        tasks: tasksReducer,\r\n    },\r\n    middleware: [sagaMiddleware],\r\n});\r\n\r\nsagaMiddleware.run(rootSaga);\r\n\r\nexport default store;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport './index.css';\nimport { App } from \"./App\";\nimport store from \"./store\";\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}